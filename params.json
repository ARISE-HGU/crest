{"name":"CREST","tagline":"Concolic test generation tool for C","body":"CREST is an automatic test generation tool for C.\r\n\r\nCREST works by inserting instrumentation code (using [CIL](http://cil.sourceforge.net)) into a target program to perform symbolic execution concurrently with the concrete execution.  The generated symbolic constraints are solved (using [Yices](http://yices.csl.sri.com)) to generate input that drive the test execution down new, unexplored program paths.\r\n\r\nCREST currently only reasons symbolically about linear, integer arithmetic.  CREST should be usable on any modern Linux or Mac OS X system.  For further building and usage information, see the [README](https://github.com/jburnim/crest/blob/master/README.md) file.  You may also want to check out the [FAQ](https://github.com/jburnim/crest/wiki/CREST-Frequently-Asked-Questions).\r\n\r\nFurther questions?  Please e-mail the CREST-users mailing list (CREST-users at googlegroups.com, searchable at https://groups.google.com/forum/#!forum/crest-users).\r\n\r\nA [short paper](http://jburnim.github.io/pubs/BurnimSen-ASE08.pdf) and [technical report](http://www.eecs.berkeley.edu/Pubs/TechRpts/2008/EECS-2008-123.html) about the search strategies in CREST are available at the homepage of [Jacob Burnim](http://jburnim.github.io).\r\n\r\n**News**:  CREST 0.1.2 is now available.  It can be downloaded at https://github.com/jburnim/crest/releases/tag/v0.1.2.  This is a bug fix release -- several build issues are fixed, as well as a bug in instrumenting unary expressions.\r\n\r\n**News**:  Heechul Yun has extended CREST to support non-linear arithmetic (using Z3).  For more information, see: https://github.com/heechul/crest-z3 and https://github.com/heechul/crest-z3/blob/master/README-z3.","google":"UA-4470377-6","note":"Don't delete this file! It's used internally to help with page regeneration."}